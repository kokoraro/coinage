// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Bitcoin Tracker app renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BitcoinTracker />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          coinage
        </h1>,
        <CoinList
          coinData={
            Array [
              Object {
                "code": "...",
                "id": 0,
                "name": "Loading",
                "price": 0,
              },
            ]
          }
          currDollar={true}
        />,
        <ControlPanel
          handleCurrency={[Function]}
          handleRefresh={[Function]}
        />,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "coinage",
        },
        "ref": null,
        "rendered": "coinage",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "coinData": Array [
            Object {
              "code": "...",
              "id": 0,
              "name": "Loading",
              "price": 0,
            },
          ],
          "currDollar": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "handleCurrency": [Function],
          "handleRefresh": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            coinage
          </h1>,
          <CoinList
            coinData={
              Array [
                Object {
                  "code": "...",
                  "id": 0,
                  "name": "Loading",
                  "price": 0,
                },
              ]
            }
            currDollar={true}
          />,
          <ControlPanel
            handleCurrency={[Function]}
            handleRefresh={[Function]}
          />,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "coinage",
          },
          "ref": null,
          "rendered": "coinage",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "coinData": Array [
              Object {
                "code": "...",
                "id": 0,
                "name": "Loading",
                "price": 0,
              },
            ],
            "currDollar": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleCurrency": [Function],
            "handleRefresh": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
